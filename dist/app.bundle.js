(()=>{"use strict";class e{constructor(e,t){this.name=e,this.length=t}damageTaken=0;hit(){this.damageTaken++}isSunk(){return this.damageTaken>=this.length}}const t=new class{createBoard(){const e=new Map;for(let t=0;t<10;t++)for(let s=0;s<10;s++){const i=`${t},${s}`;e.set(i,null)}return e}gameBoard=this.createBoard();isInbound([e,t]){return e>=0&&e<=9&&t>=0&&t<=9}isAllCoordsInbound(e){return e.every((e=>{const[t,s]=e;return this.isInbound([t,s])}))}isAllCoordsEmpty(e){return e.every((e=>!this.gameBoard.get(e)))}placeShip(e,[t,s],i,r){let a=t,o=s;if(this.isInbound([t,s])){const n=[];let h,l;for(let e=0;e<i;e++)"horizontal"===r?(l=`${t},${o}`,o++):"vertical"===r&&(l=`${a},${s}`,a++),n.push(l),h=n.map((e=>e.split(",").map(Number)));const c=this.isAllCoordsInbound(h),d=this.isAllCoordsEmpty(n);c&&d&&n.forEach((t=>{this.gameBoard.set(t,[e])}))}}receiveAttack([e,t]){const s=`${e},${t}`;let i=this.gameBoard.get(s);i?(i.push("Hit"),this.gameBoard.set(s,i),this.sendHitToShip(s)):(this.gameBoard.set(s,["Miss"]),this.gameBoard.missedAttacks.push(s))}sendHitToShip(e){let t=this.gameBoard.get(e);t.find((e=>"Hit"===e))&&t[0].hit(),console.log(t[0])}missedAttacks=[]},s=(new e("Cruiser",3),new e("Carrier",5)),i=new e("Destroyer",2);t.placeShip(s.name,[2,2],s.length,"horizontal"),t.placeShip(i,[0,3],i.length,"vertical"),t.receiveAttack([0,3]),t.receiveAttack([1,3]),console.log(t.gameBoard)})();
//# sourceMappingURL=app.bundle.js.map